/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package info.joaorebelo.JRjavaUtils.table;

import info.joaorebelo.JRFramework.i18n;
import hybernateUtil.HibernateUtil;
import info.joaorebelo.JRjavaUtils.ui.JRcomboOption;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.border.Border;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.Restrictions;
import org.hibernate.metadata.ClassMetadata;

/**
 *
 * @author joao
 */
public class JRtableSearchForm extends javax.swing.JInternalFrame
        implements ActionListener {

    /**
     * Classe entity
     */
    Class classObj;
    
    /**
     * Conditions to search
     */
    public String conditios[] = {"eq", "neq", "sw", "nsw", 
                                 "ew", "new", "co", "nco",
                                 "ge","gt","le","lt"};
    /**
     * Basa table
     */
    IJRtableDataBind JRtableDataBind;
    /**
     * Translation ressource
     */
    i18n i18n;

    /**
     * Creates new form JRtableSearchForm
     */
    public JRtableSearchForm(IJRtableDataBind JRtableDataBind, i18n i18n, Class classObj) {
        initComponents();
        this.JRtableDataBind = JRtableDataBind;
        this.i18n = i18n;
        this.classObj = classObj;
        this.iniComp();
    }

    /**
     * Initialization
     */
    private void iniComp() {
        try {
            for (String c : this.conditios) {
                JRcomboOption o = new JRcomboOption(c, this.i18n.getString(c));
                this.jComboBoxCondition.addItem(o);
            }
            for (String c : this.JRtableDataBind.getColumnsName()) {
                JRcomboOption o = new JRcomboOption(c, this.i18n.getString(c));
                this.jComboBoxColumn.addItem(o);
            }
            this.jButtonClear.addActionListener(this);
            this.jButtonClear.setName("clear");
            this.jButtonClose.addActionListener(this);
            this.jButtonClose.setName("Close");
            this.jButtonSearch.addActionListener(this);
            this.jButtonSearch.setName("search");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxColumn = new javax.swing.JComboBox();
        jLabelCondition = new javax.swing.JLabel();
        jLabelColumn = new javax.swing.JLabel();
        jComboBoxCondition = new javax.swing.JComboBox();
        jLabelSerachText = new javax.swing.JLabel();
        jTextFieldSearchText = new javax.swing.JTextField();
        jButtonClear = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        jLabelCondition.setText("Condition");

        jLabelColumn.setText("Column");

        jLabelSerachText.setText("Search text");

        jButtonClear.setText("Clear");

        jButtonSearch.setText("Search");

        jButtonClose.setText("Close");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelColumn)
                            .addComponent(jComboBoxColumn, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCondition)
                            .addComponent(jComboBoxCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabelSerachText)
                    .addComponent(jTextFieldSearchText))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonClose, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCondition)
                    .addComponent(jLabelColumn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSerachText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClear)
                    .addComponent(jButtonSearch)
                    .addComponent(jButtonClose))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JComboBox jComboBoxColumn;
    private javax.swing.JComboBox jComboBoxCondition;
    private javax.swing.JLabel jLabelColumn;
    private javax.swing.JLabel jLabelCondition;
    private javax.swing.JLabel jLabelSerachText;
    private javax.swing.JTextField jTextFieldSearchText;
    // End of variables declaration//GEN-END:variables

    /**
     * saves in memory the Border of search button, in order to alert wher have
     * a search filter or not
     */
    public Border oldSerchBorder = null;
    
    /**
     * Handle for action performed
     * @param e 
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        try {
            if(e.getSource().getClass().getSimpleName().
               toLowerCase().equals("jbutton")==false){
                return;
            }
            JButton b = (JButton)e.getSource();
            String name = b.getName();
            switch(name.toLowerCase()){
                case "close":
                    this.setVisible(false);
                    break;
                case "clear":
                    this.jTextFieldSearchText.setText("");
                    this.jComboBoxColumn.setSelectedIndex(0);
                    this.jComboBoxCondition.setSelectedIndex(0);
                    this.JRtableDataBind.getJRtable().bind();
                    this.JRtableDataBind.getJRtable().getNavigation().searchButton.setBorder(oldSerchBorder);
                    break;
                case "search":
                    if(jTextFieldSearchText.getText().equals("") == false){
                        oldSerchBorder = this.JRtableDataBind.getJRtable().getNavigation().searchButton.getBorder();
                        this.JRtableDataBind.getJRtable().getNavigation().searchButton.setBorder(BorderFactory.createLineBorder(Color.red));
                        this.JRtableDataBind.getJRtable().bind();
                    }
                    break;
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }
    
    /**
     * Get SQL Criteria for search
     * @return
     */
    public Criterion getCriteria(){
        try{
            if(this.jTextFieldSearchText.getText().equals("") == true){
                return null;
            }
            ClassMetadata c = HibernateUtil.getSessionFactory().getClassMetadata(this.classObj);
            JRcomboOption optCrt = (JRcomboOption)this.jComboBoxCondition.getSelectedItem();
            JRcomboOption optCol = (JRcomboOption)this.jComboBoxColumn.getSelectedItem();
            String pro = optCol.getValue();
            
            String s = jTextFieldSearchText.getText();
            switch(optCrt.getValue()){
                case "eq":
                    return Restrictions.sqlRestriction(pro + " = '" + s +"'");
                case "neq":
                    return Restrictions.sqlRestriction(pro + " <> '" + s +"'");
                case "sw":
                    return Restrictions.sqlRestriction(pro + " LIKE '"+s+"%'");
                case "nsw":
                    return Restrictions.sqlRestriction(pro + " NOT LIKE '"+s+"%'");
                case "co":
                    return Restrictions.sqlRestriction(pro + " LIKE '%"+s+"%'");
                case "nco":
                    return Restrictions.sqlRestriction(pro + " NOT LIKE '%"+s+"%'");
                case "ew":
                    return Restrictions.sqlRestriction(pro + " LIKE '%"+s+"'");
                case "new":
                    return Restrictions.sqlRestriction(pro + " NOT LIKE '%"+s+"'");
                case "gt":
                    return Restrictions.sqlRestriction(pro + " > '"+s+"'");
                case "ge": 
                    return Restrictions.sqlRestriction(pro + " >= '"+s+"'");
                case "lt":
                    return Restrictions.sqlRestriction(pro + " < '"+s+"'");
                case "le":
                    return Restrictions.sqlRestriction(pro + " <= '"+s+"'");
            }
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
        return null;
    }
    
}
